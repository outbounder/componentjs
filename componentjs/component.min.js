var Component={};Component.loader={};Component.compiler={};(function(){var componentCacheCollection=[];Component.loader.wrapPathToElement=function(context){if(typeof componentCacheCollection[context.path]!=='undefined'){context.data=componentCacheCollection[context.path];if(context.verbose)console.log('from cache '+context.data);return Component.loader.handleResponse(context)}var req=new XMLHttpRequest();if(typeof context.async==="function"){req.open("GET",context.path,true);req.onreadystatechange=function(){if(req.readyState==4){if(req.status==200||req.status==304){componentCacheCollection[context.path]=req.responseText;context.data=req.responseText;if(context.verbose)console.log('data async:'+context.data);Component.loader.handleResponse(context)}else if(req.status==404)throw new Error("component not found "+context.path,context.path)}};req.send(null)}else{req.open("GET",context.path,false);req.send(null);if(req.status==200||req.status==304||req.status==0){componentCacheCollection[context.path]=req.responseText;context.data=req.responseText;if(context.verbose)console.log('data sync:'+context.data);return Component.loader.handleResponse(context)}else if(req.status==404)throw new Error("component not found "+context.path,context.path);else throw new Error(req.status+" "+req.responseText)}};Component.loader.handleResponse=function(context){if(window.DOMParser){parser=new DOMParser();xmlDoc=parser.parseFromString(context.data,"text/xml")}else{xmlDoc=new ActiveXObject("Microsoft.XMLDOM");xmlDoc.async="false";xmlDoc.loadXML(context.data)}try{var element=Component.compiler.wrapToElement(xmlDoc.firstChild,null,context);Component.compiler.augment(element)}catch(e){throw new Error(e,context.path)}if(typeof context.async!=="function")return element;else context.async(element)};Component.loader.executeScriptFromPath=function(context){var req=new XMLHttpRequest();var content;if(componentCacheCollection[context.path+".js"]===undefined){req.open("GET",context.path+".js",false);req.send(null);if(req.status!=200&&req.status!=304)throw new Error("script not found "+context.path,context.parent.path);componentCacheCollection[context.path+".js"]=req.responseText;content=req.responseText}else content=componentCacheCollection[path+".js"];Component.compiler.compileAndExecute(context.scriptContext,content,context)}})();(function(){Component.compiler.augment=function(context,element){};Component.compiler.compileAndExecute=function(scriptContext,content,context){try{var builder=new Function(content);builder.apply(scriptContext)}catch(e){throw new Error(e.message,context.path)}};Component.compiler.executeScript=function(scriptContext,node,context){for(var i=0;i<node.childNodes.length;i++){var content=node.childNodes[i].data.replace(/^\s+|\s+$/g,"");Component.compiler.compileAndExecute(scriptContext,content,context)}};Component.compiler.resolvePath=function(path,context){console.log(context.path+"|"+path);return context.path.substr(0,context.path.lastIndexOf("/")+1)+path};Component.compiler.copyAttributes=function(src,dest,ignore){if(typeof src.attributes==="undefined"||src.attributes===null)return;if(typeof ignore=="undefined")ignore=[];for(var i=0;i<src.attributes.length;i++){var ignore=false;for(var k in ignore)if(src.attributes[i].name==k)ignore=true;if(ignore)continue;if(src.attributes[i].namespaceURI!=null)dest.setAttributeNS(src.attributes[i].namespaceURI,src.attributes[i].name,src.attributes[i].value);else dest.setAttribute(src.attributes[i].name,src.attributes[i].value)}};Component.compiler.wrapToElement=function(node,parentDomNode,context){if(node.nodeName=="link"){var head=document.getElementsByTagName("head")[0];var currentLinks=head.getElementsByTagName("link");for(var l=0;i<currentLinks.length;l++)if(currentLinks[l].getAttribute('href')==node.getAttribute('href')){if(context.verbose)console.log("skipping appending link to head, already exists such "+node.getAttribute('href'));return null}var link=document.createElement(node.nodeName);Component.compiler.copyAttributes(node,link);link.href=Component.compiler.resolvePath(node.getAttribute('href'),context);head.appendChild(link);return null}else if(node.nodeName=="script"&&node.getAttribute("type")==="component-code"){var path=Component.compiler.resolvePath(node.getAttribute("source"),context);Component.loader.executeScriptFromPath({scriptContext:parentDomNode,path:path,parent:context});if(node.childNodes.length!=0)Component.compiler.executeScript(parentDomNode,node,context);return null}else if(node.nodeName=="script"&&node.getAttribute("src")!==null){var script=document.createElement(node.nodeName);script.setAttribute('src',node.getAttribute("src"));if(node.childNodes.length!=0)Component.compiler.executeScript(script,node,context);return script}else if(node.nodeName=="script"&&node.getAttribute("source")!==null){var path=Component.compiler.resolvePath(node.getAttribute("source"),context);var element=Component.loader.wrapPathToElement({path:path,parent:context});if(typeof parentDomNode!=='undefined')parentDomNode[node.getAttribute("id")]=element;if(node.childNodes.length!=0)Component.compiler.executeScript(element,node,context);Component.compiler.copyAttributes(node,element,['source','type']);return element}else if(node.nodeName=="script"&&node.getAttribute("source")===null){Component.compiler.executeScript(parentDomNode,node,context);return null}else{var e=null;if(node.namespaceURI!=null)e=document.createElementNS(node.namespaceURI,node.nodeName);else e=document.createElement(node.nodeName);Component.compiler.copyAttributes(node,e);for(var i=0;i<node.childNodes.length;i++){if(node.childNodes[i].nodeType==8)continue;if(node.childNodes[i].nodeType==3){var text=document.createTextNode(node.childNodes[i].data);e.appendChild(text)}else{var value=Component.compiler.wrapToElement(node.childNodes[i],e,context);if(value){e.appendChild(value);if(value.getAttribute('id'))e[value.getAttribute('id')]=value}}}return e}}})();(function(){function override(f,g){return function(){return g.apply(f,arguments)}};if(typeof Component.compiler.augment==="undefined")throw new Error("Component.compiler.augment is not found to override. fix the load order");Component.compiler.augment=override(Component.compiler.augment,function(element){element.$eventHandlers=[];element.on=function(eventName,handler){for(var i in this.$eventHandlers)if(this.$eventHandlers[i].name===eventName&&this.$eventHandlers[i].handle===handler)return;this.$eventHandlers.push({name:eventName,handle:handler})};element.emit=function(eventName,eventData){for(var i in this.$eventHandlers)if(this.$eventHandlers[i].name==eventName)if(!this.$eventHandlers[i].handle(eventData))return false;return true};element.stopListen=function(eventName,handler){for(var i in this.$eventHandlers)if(this.$eventHandlers[i].name==eventName){this.$eventHandlers[i].splice(i,1);i-=1}};return this(element)})})();(function(){Component.fromPath=function(path,async){return Component.loader.wrapPathToElement({path:path,async:async})};Component.overrideFromPath=function(scriptElement,path,async){var parentElement=scriptElement.parentNode;if(typeof async!=="function"){var component=Component.loader.wrapPathToElement({path:path});if(scriptElement.getAttribute('id'))parentElement[scriptElement.getAttribute('id')]=component;parentElement.replaceChild(component,scriptElement)}else{Component.loader.wrapPathToElement({path:path,async:function(component){if(scriptElement.getAttribute('id'))parentElement[scriptElement.getAttribute('id')]=component;async(component);parentElement.replaceChild(component,scriptElement)}})}};Component.appendFromPath=function(parentElement,path,async){if(typeof async!=="function"){var component=Component.loader.wrapPathToElement({path:path});parentElement.appendChild(component);return component}else{Component.loader.wrapPathToElement({path:path,async:function(component){async(component);parentElement.appendChild(component)}})}};Component.process=function(domElement){var hasComponents=true;while(hasComponents){hasComponents=false;var x=domElement.getElementsByTagName("script");for(var i=0;i<x.length;i++){if(x[i].getAttribute('source')){if(x[i].getAttribute('type')=="component"){Component.overrideFromPath(x[i],x[i].getAttribute('source'));hasComponents=true;break}}}}}})();